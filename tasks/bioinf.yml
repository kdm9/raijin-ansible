####################
#  AdapterRemoval  #
####################
- include: software_module.yml
  vars:
    name: adapterremoval
    version: "2.2.2"
    url: "https://github.com/MikkelSchubert/adapterremoval/archive/v{{version}}.tar.gz"
    required_modules:
      - "zlib/1.2.8"
      - "bzip2/1.0.6"
    unarchive_creates: Makefile
    build_script: >
      export CC=gcc &&
      export CXX=g++ &&
      make &&
      make install PREFIX="{{ soft_dir }}/{{name}}-{{version}}"
    build_creates: bin/AdapterRemoval
    module_def:
      help_text: 'rapid adapter trimming, identification, and read merging'
      dev: false
  tags: modules,adapterremoval

#########
#  Axe  #
#########
- include: software_module.yml
  vars:
    name: axe
    version: "0.3.2"
    url: "https://github.com/kdmurray91/axe/archive/{{version}}.tar.gz"
    required_modules:
      - "zlib/1.2.8"
    unarchive_creates: CMakeLists.txt
    build_script: >
      rm -rf build && mkdir build && cd build &&
      cmake -DCMAKE_INSTALL_PREFIX=$PREFIX -DZLIB_ROOT=$ZLIB_ROOT .. &&
      make &&
      make test &&
      make install 
    build_creates: bin/axe-demux
    module_def:
      help_text: 'rapid demultiplexer'
      dev: false
  tags: modules,axe


############
#  Beagle  #
############
- include: software_module.yml
  vars:
    name: beagle
    version: "4.1-27Jan18"
    url: https://faculty.washington.edu/browning/beagle/beagle.27Jan18.7e1.jar
    required_modules:
      - "java/jdk1.8.0_60"
    build_script: >
      cp {{source_dir}}/{{name}}-{{version}}/beagle*.jar "$PREFIX/{{build_creates}}"
    build_creates: "beagle.jar"
    module_def:
      help_text: 'Genotype calling and  imputation'
      dev: false
    java_wrapper:
      jar: "{{soft_dir}}/{{name}}-{{version}}/{{build_creates}}"
      mem: "31g"
      stack: "50m"
  tags: modules,beagle

#########
#  BWA  #
#########
- include: software_module.yml
  vars:
    name: bwa
    version: "0.7.17"
    url: "https://github.com/lh3/bwa/archive/v{{version}}.tar.gz"
    required_modules:
      - "zlib/1.2.8"
    unarchive_creates: Makefile
    build_script: >
      make &&
      mkdir -p "$PREFIX/bin" "$PREFIX/share/man/man1" &&
      cp bwa "$PREFIX/bin/" &&
      cp bwa.1 "$PREFIX/share/man/man1/"
    build_creates: bin/bwa
    module_def:
      help_text: 'the Burrows-wheeler short read aligner'
      dev: false
  tags: modules,bwa

#########
#  NGM  #
#########
- include: software_module.yml
  vars:
    name: nextgenmap
    version: "0.5.5"
    url: "https://github.com/cibiv/nextgenmap/archive/v{{version}}.tar.gz"
    required_modules:
      - "zlib/1.2.8"
    unarchive_creates: Makefile
    build_script: >
      rm -rf build && mkdir build && cd build &&
      cmake .. -DCMAKE_INSTALL_PREFIX=.. &&
      make install &&
      mkdir -p "$PREFIX/bin" &&
      cp -r ../bin/ngm-*/* "$PREFIX/bin/"
    build_creates: bin/ngm
    module_def:
      help_text: 'NextGenMap -- short read mapper'
      dev: false
  tags: modules,ngm,nextgenmap

############
#  Pindel  #
############
- include: software_module.yml
  vars:
    name: pindel
    version: "0.2.5b8"
    url: "https://github.com/genome/pindel/archive/v{{version}}.tar.gz"
    required_modules:
      - "htslib/1.4"
      - "zlib/1.2.8"
    unarchive_creates: INSTALL
    build_script: >
      curl https://patch-diff.githubusercontent.com/raw/genome/pindel/pull/59.patch | patch -p1 &&
      bash ./INSTALL $HTSLIB_ROOT &&
      mkdir -p $PREFIX/bin &&
      cp pindel pindel2vcf sam2pindel pindel2vcf4tcga $PREFIX/bin/
    build_creates: bin/pindel
    module_def:
      help_text: 'the pindel SV caller'
      dev: false
  tags: modules,pindel


###############
#  Structure  #
###############
- include: software_module.yml
  vars:
    name: structure
    version: "2.3.4"
    url: "https://web.stanford.edu/group/pritchardlab/structure_software/release_versions/v{{version}}/structure_kernel_source.tar.gz"
    required_modules:
      - "zlib/1.2.8"
    unarchive_creates: Makefile
    build_script: >
      make &&
      mkdir -p $PREFIX/bin &&
      cp structure $PREFIX/bin/
    build_creates: bin/structure
    module_def:
      help_text: 'Prichards structure'
      dev: false
  tags: modules,structure


###############
# GATK 4 beta #
###############
- include: software_module.yml
  vars:
    name: gatk4
    version: "4.0.5.2"
    url: https://github.com/broadinstitute/gatk/releases/download/{{version}}/gatk-{{version}}.zip
    required_modules:
      - java/jdk1.8.0_60
    unarchive_creates: Makefile
    java_wrapper:
      wrapper_name: "gatk4"
      jar: "{{soft_dir}}/{{name}}-{{version}}/gatk-package-{{version}}-local.jar"
    build_script: >
      cd gatk-4*/ &&
      mv gatk-package-{{version}}-local.jar  $PREFIX/
    build_creates: gatk-package-{{version}}-local.jar
    module_def:
      help_text: 'GATK4 beta release'
      dev: false
  tags: modules,gatk4

##########
# seqhax #
##########
- include: software_module.yml
  vars:
    name: seqhax
    version: 0.7.0
    url: https://github.com/kdmurray91/seqhax/archive/{{version}}.tar.gz
    required_modules:
      - zlib/1.2.8
      - cmake
    unarchive_creates: CMakeLists.txt
    build_script: >
      rm -rf build && mkdir build && cd build &&
      cmake .. -DCMAKE_INSTALL_PREFIX=$PREFIX -DZLIB_ROOT=${ZLIB_ROOT} && make install
    build_creates: bin/seqhax
    module_def:
      help_text: 'seqhax: small sequence utilities'
      dev: false
  tags: modules,seqhax

##################
#  fastq-screen  #
##################
- include: software_module.yml
  vars:
    name: fastq-screen
    version: 0.11.4
    url: https://www.bioinformatics.babraham.ac.uk/projects/fastq_screen/fastq_screen_v{{version}}.tar.gz
    required_modules:
      - zlib/1.2.8
      - perl
      - bowtie2
      - bwa
    unarchive_creates: license.txt
    build_script: >
      cp * $PREFIX
    build_creates: fastq-screen
    module_def:
      help_text: 'fastq-screen: screen reads by alignment'
      dev: false
      path_dir: ''
  tags: modules,fastq-screen

################################
#  scrappie minion basecaller  #
################################
- include: software_module.yml
  vars:
    name: scrappie
    version: 1.3.2
    url: https://github.com/nanoporetech/scrappie/archive/release-{{version}}.tar.gz
    required_modules:
      - cunit/2.1-3
      - hdf5/1.8.10p
      - intel-mkl
    unarchive_creates: CMakeLists.txt
    build_script: >
      make BLAS=mkl && mkdir $PREFIX/bin && mv scrappie $PREFIX/bin
    build_creates: bin/scrappie
    module_def:
      help_text: 'scrappie: a ONT basecaller'
      dev: false
    clean_source: no
  tags: modules,scrappie

############
#  Kraken  #
############
- include: software_module.yml
  vars:
    name: kraken
    version: "1.1"
    url: "https://github.com/DerrickWood/kraken/archive/v{{version}}.tar.gz"
    required_modules:
      - zlib/1.2.8
    unarchive_creates: install_kraken.sh
    build_script: >
      bash ./install_kraken.sh $PREFIX &&
      curl http://www.cbcb.umd.edu/software/jellyfish/jellyfish-1.1.11.tar.gz | tar xvz &&
      cd jellyfish-*/ && ./configure --prefix $PREFIX && make install && ln -s $PREFIX/bin/* $PREFIX/
    build_creates: kraken
    module_def:
      help_text: 'Kraken taxon assignment'
      dev: false
      path_dir: ''
  tags: modules,kraken

###########
#  Plink  #
###########
- include: software_module.yml
  vars:
    name: plink19
    version: "180410"
    url: "https://www.cog-genomics.org/static/bin/plink{{version}}/plink_src.zip"
    required_modules:
      - zlib/1.2.8
      - atlas
    unarchive_creates: Makefile
    build_script: >
      cd 1.9 &&
      make -j4 CPPFLAGS="-DDYNAMIC_ZLIB=1" ZLIB=$ZLIB_ROOT/lib/libz.a BLASFLAGS=" -Wl,--start-group ${MKLROOT}/lib/intel64/libmkl_intel_ilp64.a ${MKLROOT}/lib/intel64/libmkl_intel_thread.a ${MKLROOT}/lib/intel64/libmkl_core.a -Wl,--end-group -liomp5 -lpthread -lm -ldl" &&
      make install DESTDIR="" PREFIX=$PREFIX
    build_creates: bin/plink
    module_def:
      help_text: 'plink1.9'
      dev: false
  tags: modules,plink

##########################
#  vt (variant toolkit)  #
##########################
- include: software_module.yml
  vars:
    name: vt
    version: master
    gitrepo: https://github.com/atks/vt
    required_modules: []
    unarchive_creates: Makefile
    build_script: >
      module unload intel-cc intel-fc intel-mkl &&
      make && mkdir $PREFIX/bin && mv vt $PREFIX/bin
    build_creates: bin/vt
    module_def:
      help_text: 'variant toolkit'
      dev: false
  tags: modules,vt



###############
#  freebayes  #
###############

- include: software_module.yml
  vars:
    name: freebayes
    version: v1.2.0
    gitrepo: https://github.com/ekg/freebayes
    required_modules: [htslib]
    unarchive_creates: Makefile
    build_script: >
      cp vcflib/tabixpp/tabix.hpp ./src &&
      make CC=${CC} CXX=${CXX} &&
      mkdir $PREFIX/bin &&
      mv bin/freebayes bin/bamleftalign $PREFIX/bin
    build_creates: bin/freebayes
    module_def:
      help_text: 'freebayes'
      dev: false
  tags: modules,freebayes


##############
#  Albacore  #
##############
- include: software_module.yml
  vars:
    name: albacore
    version: "2.3.1"
    required_modules:
      - python3/3.6.2
    build_script: >
      python3 -m venv $PREFIX/env &&
      source $PREFIX/env/bin/activate &&
      pip3 install https://mirror.oxfordnanoportal.com/software/analysis/ont_albacore-{{version}}-cp36-cp36m-manylinux1_x86_64.whl &&
      mkdir -p $PREFIX/bin &&
      ln -s $PREFIX/env/bin/*.py $PREFIX/bin
    build_creates: bin/read_fast5_basecaller.py
    module_def:
      help_text: 'Albacore ONT basecaller'
      dev: false
  tags: modules,albacore
